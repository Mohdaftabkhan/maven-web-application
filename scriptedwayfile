node{('slave')

try{
    
    def mavenHome = tool name: 'maven3.8.4'
    
    echo "The Job name is: ${env.JOB_NAME}" 
    echo "The Build numebr is: ${env.BUILD_NUMBER}"
    echo "The node name is: ${env.NODE_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])


//Checkout Code State
stage('CheckoutCode'){
sendSlackNotifications("STARTED")
git branch: 'developement', credentialsId: 'e36b8a69-c680-4a0e-bc66-c9f5b74c63df', url: 'https://github.com/Mohdaftabkhan/maven-web-application.git'
}

//Build
stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}

 /*
//Execute the sonarqube report
stage( 'ExecuteSonarQubeReport' ){
sh "${mavenHome}/bin/mvn sonar:sonar"
}

//upload artifacts
stage( 'UploadArtifactsInArtifactRepo' ){
sh "${mavenHome}/bin/mvn deploy"
}

//deploy
stage( 'DeployApplicationIntoTomcat' ){
sshagent(['cfb06273-d7cf-4155-94b6-f7b268d50568']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.127.176.91:/opt/apache-tomcat-9.0.71/webapps/"
}
}
*/

}//try closing
catch(e){
currentBuild.result = "FAILURE"
}
finally{
sendSlackNotifications(currentBuild.result)
}

}//node closing

//Function for slack notifications

def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
